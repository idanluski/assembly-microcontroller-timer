#include "bsp.h"
              


                MODULE    HAL
                PUBLIC    SysConfig,LCD_DRIVER,PBs_handler,EVENT,Lcd_stobe
                PUBLIC    Delay5,Delay15,Delay02,DelayBounce,time_laps,EVENT_TWO,StopTime1
                PUBLIC    StopTime,LCD_CLR,Line1,Line2,CurR,PrintLCDs,TA0_ISR 
                EXTERN    Lcd_cmd,sec_timer_ISR,state,GPIOconfig,TIMERconfig,TIMERSetupconfig

                RSEG      CODE
           
;----------------------------------------------------------------------------------------------
;             System configuration  
;----------------------------------------------------------------------------------------------
SysConfig
          CALL   #GPIOconfig
          ret
 
 ;------------------------------------------------------------------------------------------ 
;                LCD DRIVER
;------------------------------------------------------------------------------------------
LCD_DRIVER  pop R4 ; RETURN ADRESS
            POP R10 ;THE CHAR WE WANT TO SHOW
            call #Delay5
            mov.b #0x00,LCDOUT
            bis.b #RS, LCDCONOUT
            mov.b R10, LCDOUT
            call  #Lcd_stobe
            bic.b #RS,LCDCONOUT
            push R4 
            ret
            
;----------------------------------------------------------------------- 
;            PORT2 Interrupt Service Routine
;-----------------------------------------------------------------------
PBs_handler  push.w #debounceVal
             call   #DelayBounce    
             bit.b  #PB0,PBIFG   ;check if PB0 is pushed
             jnz    PB0sel 
             bit.b  #PB1,PBIFG   ;check if PB1 is pushed
             jnz    PB1sel
             reti               
             
PB0sel       mov    #1,state 
             mov    #PB0,R4     ; which flag to clear
             jmp    exitLPM0
PB1sel       mov    #2,state
             mov    #PB1,R4     ; which flag to clear
             jmp    exitLPM0

exitLPM0     bic    #CPUOFF,0(SP)  ; Exit LMP0
             bic.b  R4,PBIFG 
             bis.w  #GIE,SR
             reti          
             
             
;----------------------------------------------------------------------- 
;            state 2
;-----------------------------------------------------------------------
time_laps   mov.w  #TACLR,TA1CTL 
            mov #TASSEL_2+TAIE++MC_2, &TA1CTL
            clr &TA1CCTL1 
            mov #CAP+SCS+CCIS_2+CM_3, &TA1CCTL1
            RET
;----------------------------------------------------------------------------------------------
;             MAKE EVENT TO CAPTURE
;----------------------------------------------------------------------------------------------
EVENT       pop R4 //return adress
            cmp #CM_R_F+GND+capturM+CCIELCD+SCSLCD,&TACCTL1
            jnz change
            mov #CM_R_F+VCC+capturM+CCIELCD+SCSLCD, &TACCTL1
            JMP FINISH
change      mov #CM_R_F+GND+capturM+CCIELCD+SCSLCD, &TACCTL1
FINISH      PUSH R4
            RET


EVENT_TWO ;MOV #CAP+SCS+CCIS1+CM_3,&TACCTL1
          XOR.W #CCIS0,TA1CCTL1  //1 CYCLE
          RET


;----------------------------------------------------------------------------------------------
;             TIME
;----------------------------------------------------------------------------------------------
StopTime    mov.w  #TACLR,TACTL
            mov.w  #MC_0,TACTL
            RET
            
StopTime1    mov.w  #TACLR,TA1CTL
            mov.w  #MC_0,TA1CTL
            RET
            
Delay5      clr  R5
            mov.w #1740,R5
D5          dec.w R5
            jnz   D5
            RET
            
Delay15     clr  R5
            mov.w #5240,R5
D15         dec.w R5
            jnz   D15
            RET
            
Delay02     clr  R5
            mov.w #69,R5
D02         dec.w R5
            jnz   D02
            RET 
            
DelayBounce pop R4;return value
            pop R5;debouncetime
Deboun      dec.w R5
            jnz   Deboun
            push R4
            RET
            
            
            
 ;----------------------------------------------------------------------------------------------
;             LCD-options 
;----------------------------------------------------------------------------------------------
 
 
LCD_CLR     PUSH #0x01
            CALL #Lcd_cmd
            RET
            
Line1       PUSH #0x02
            CALL #Lcd_cmd
            RET
            

Line2       PUSH #0xC0
            CALL #Lcd_cmd
            RET
            
CurR        PUSH #0x14 //SPACE
            CALL #Lcd_cmd
            RET               
            
;----------------------------------------------------------------------------------------------
;             Print LCD 
;----------------------------------------------------------------------------------------------
PrintLCDs
          call     #TIMERconfig
          pop      R14 //RETURN ADRESS
          mov      #5,R13
          call     #LCD_CLR
          call     #Line1
Printing  CALL     #LCD_DRIVER
          dec      R13
          jnz      Printing
          bis.w    #LPM0+GIE,SR //SHOW THE NUM AND SLEEP
          push     R14
          RET
          
/*PrintFQ   call     #Line2
          call     #CurR
          call     #CurR
          call     #CurR
          mov      #5,R10
          pop      R9
Jh20      CALL     #LCD_DRIVER
          dec      R10  
          jnz      Jh20
          push     R9
          RET   */                     
;----------------------------------------------------------------------------------------------
;             Lcd_stobe
;----------------------------------------------------------------------------------------------           
             
Lcd_stobe   
            bis.b #0x20,LCDCONOUT
            NOP
            NOP
            bic.b #0x20,LCDCONOUT
            RET  
            
;------------------------------------------------------------------------------------------ 
;               TIMER A0 Interrupt Service Routine 
;------------------------------------------------------------------------------------------
TA0_ISR      CALL #TIMERconfig
             bic    #CPUOFF,0(SP)
             RETI
            

                        
;------------------------------------------------------------------------------------------ 
                ENDMOD
                END